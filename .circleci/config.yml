defaults: &defaults
  working_directory: ~/app
  environment:
    JAVA_TOOL_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2

version: 2.1

executors:
  builder:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  deployer:
    <<: *defaults
    docker:
      - image: circleci/python:3

commands:
  app_version:
    description: "Record the Application Version"
    steps:
      - run:
          command: |
            APP_VERSION=$(unzip -p build/libs/custody-api-*.jar BOOT-INF/classes/META-INF/build-info.properties | awk -F = '/build.version/ {print $2}')

            # make up a good version name
            ([[ "${CIRCLE_BRANCH}" == "master" ]] && echo "$APP_VERSION" || echo "${APP_VERSION}.${CIRCLE_BRANCH}") | tee ./app_version.txt | awk '{print "Setting app version to " $1}'

  build_publish:
    description: "Build container and publish to docker hub"
    steps:
      - run:
          command: |
            DOCKER_IMAGE="mojdigitalstudio/custody-api"
            APP_VERSION=$(cat ./app_version.txt)
            docker build --rm=false . \
               --tag "$DOCKER_IMAGE:$APP_VERSION" \
               --label "maintainer=noms-studio-webops@digital.justice.gov.uk" \
               --label "app.version=$APP_VERSION" \
               --label "build.version=$APP_VERSION" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              # publish to docker hub as the tag
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
              docker tag mojdigitalstudio/$DOCKER_IMAGE:$APP_VERSION $DOCKER_IMAGE:latest
              docker push mojdigitalstudio/$DOCKER_IMAGE:$APP_VERSION
              docker push mojdigitalstudio/$DOCKER_IMAGE:latest
            fi

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run: ./gradlew build
      - app_version
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle
            - app_version.txt

  build_docker:
    executor: deployer
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker:
          docker_layer_caching: true
      - build_publish

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build_docker:
          requires:
            - build
          filters:
            branches:
              only: master
