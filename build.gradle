import org.springframework.boot.gradle.plugin.SpringBootPlugin

import java.time.Instant
import java.time.LocalDate

plugins {
    id 'java'
    id 'groovy'
    //  when upgrading spring boot to 2.2.3 remove pinned tomcat version below (ext['tomcat.version'] = '9.0.30')
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.owasp.dependencycheck' version '5.2.4'
    id 'com.github.ben-manes.versions' version '0.27.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    agentDeps
    agentDeps.transitive = false
}

project.sourceCompatibility = 11
project.targetCompatibility = 11

ext['tomcat.version'] = '9.0.30'

dependencyCheck {
    failBuildOnCVSS = 5
    suppressionFiles = ['dependency-check-suppress-spring.xml']
    format = 'ALL'
    analyzers {
        assemblyEnabled = false
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

group = 'uk.gov.justice.digital.hmpps'

def today = Instant.now()
def todaysDate = LocalDate.now().format('yyyy-MM-dd')
version = System.getenv('CI') ? "${todaysDate}.${System.getenv('CIRCLE_BUILD_NUM')}" : todaysDate

jar {
    baseName = rootProject.name
    manifest {
        attributes 'Implementation-Title': rootProject.name, 'Implementation-Version': version
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = rootProject.name
            version = version
            group = group
            name = rootProject.name
            time = today
            additional = [
                    by                   : System.properties['user.name'],
                    operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
                    continuousIntegration: System.getenv('CI') ? true : false,
                    machine              : InetAddress.localHost.hostName
            ]
        }
    }
}

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation files('lib/ojdbc10-19.3.jar')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.4.0.RELEASE'
    implementation 'org.springframework.security:spring-security-jwt:1.1.0.RELEASE'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'javax.activation:activation:1.1.1'

    implementation 'org.hibernate:hibernate-core:5.4.10.Final'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'com.zaxxer:HikariCP:3.4.1'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    implementation 'com.microsoft.azure:applicationinsights-spring-boot-starter:2.5.1'
    implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.5.1'
    agentDeps 'com.microsoft.azure:applicationinsights-agent:2.5.1'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.guava:guava:28.2-jre'

    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compileOnly 'org.projectlombok:lombok:1.18.10'

    testRuntime 'com.h2database:h2:1.4.200'
    runtime 'com.h2database:h2:1.4.200'

    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13'
    testImplementation 'io.rest-assured:rest-assured:3.2.0'
    testImplementation "com.github.tomakehurst:wiremock:2.25.1"

    compile configurations.agentDeps
}

task copyAgent(type: Copy) {
    from configurations.agentDeps
    into "$buildDir/libs"
}

assemble.dependsOn copyAgent
